services:
  # Base de datos SQL Server
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: veterinaria-auth-db-prod
    restart: unless-stopped
    environment:
      SA_PASSWORD: ${DB_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"  # Usar Express para producción pequeña
    ports:
      - "${DB_PORT:-1433}:1433"
    volumes:
      - db_data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${DB_PASSWORD}" -C -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Limitar recursos para SQL Server
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Aplicación NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: production
    container_name: veterinaria-auth-app-prod
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: db
      DB_PORT: 1433
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      # Solo para logs si es necesario
      - app_logs:/usr/src/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    # Limitar recursos para la app
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Reiniciar políticas
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge
    name: veterinaria-auth-network

volumes:
  db_data:
    name: veterinaria-auth-db-data
  app_logs:
    name: veterinaria-auth-app-logs